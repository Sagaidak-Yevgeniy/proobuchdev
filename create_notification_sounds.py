#!/usr/bin/env python
"""
Скрипт для создания необходимых звуковых файлов для системы уведомлений.
Создает missing_sounds директорию со звуковыми файлами.
"""

import os
import base64
import sys


def create_notification_sounds():
    """
    Создает стандартные звуковые файлы для системы уведомлений,
    если они отсутствуют.
    """
    # Проверяем и создаем директорию для звуков
    static_dir = 'static'
    sounds_dir = os.path.join(static_dir, 'sounds')
    
    if not os.path.exists(static_dir):
        os.makedirs(static_dir)
        print(f"✓ Создана директория: {static_dir}")
    
    if not os.path.exists(sounds_dir):
        os.makedirs(sounds_dir)
        print(f"✓ Создана директория: {sounds_dir}")
    
    # Создадим простые бинарные файлы вместо base64
    sound_data = {
        "success.mp3": b'\xFF\xFB\x90\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x58\x69\x6E\x67\x00\x00\x00\x0F\x00\x00\x00\x12\x00\x00\x0C\x4E\x00\x09\x09\x09\x09\x09\x15\x15\x15\x15\x15\x15\x21\x21\x21\x21\x21\x21\x2D\x2D\x2D\x2D\x2D\x2D\x39\x39\x39\x39\x39\x39\x45\x45\x45\x45\x45\x45\x51\x51\x51\x51\x51\x51\x5D\x5D\x5D\x5D\x5D\x5D\x69\x69\x69\x69\x69\x69\x75\x75\x75\x75\x75\x75\x81\x81\x81\x81\x81\x81\x8D\x8D\x8D\x8D\x8D\x8D\x99\x99\x99\x99\x99\x99\xA5\xA5\xA5\xA5\xA5\xA5\xB1\xB1\xB1\xB1\xB1\xB1\xBD\xBD\xBD\xBD\xBD\xBD\xC5\xC5\xC5\xC5\xC5\xC5\xD1\xD1\xD1\xD1\xD1\xD1\xDD\xDD\xDD\xDD\xDD\xDD\xE8\xE8\xE8\xE8\xE8\xE8\xF6\xF6\xF6\xF6\xF6\xF6\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x39\x4C\x41\x4D\x45\x33\x2E\x31\x30\x30\x01\x96\x00\x00\x00\x00\x2E\x00\x00\x03\x50\x09\x2D\x7F\x71\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
        "error.mp3": b'\xFF\xFB\x90\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x58\x69\x6E\x67\x00\x00\x00\x0F\x00\x00\x00\x12\x00\x00\x0F\x92\x00\x09\x09\x09\x09\x09\x15\x15\x15\x15\x15\x15\x21\x21\x21\x21\x21\x21\x2D\x2D\x2D\x2D\x2D\x2D\x39\x39\x39\x39\x39\x39\x45\x45\x45\x45\x45\x45\x51\x51\x51\x51\x51\x51\x5D\x5D\x5D\x5D\x5D\x5D\x69\x69\x69\x69\x69\x69\x75\x75\x75\x75\x75\x75\x81\x81\x81\x81\x81\x81\x8D\x8D\x8D\x8D\x8D\x8D\x99\x99\x99\x99\x99\x99\xA5\xA5\xA5\xA5\xA5\xA5\xB1\xB1\xB1\xB1\xB1\xB1\xBD\xBD\xBD\xBD\xBD\xBD\xC5\xC5\xC5\xC5\xC5\xC5\xD1\xD1\xD1\xD1\xD1\xD1\xDD\xDD\xDD\xDD\xDD\xDD\xE8\xE8\xE8\xE8\xE8\xE8\xF6\xF6\xF6\xF6\xF6\xF6\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x39\x4C\x41\x4D\x45\x33\x2E\x31\x30\x30\x01\x96\x00\x00\x00\x00\x2E\x00\x00\x03\x54\x08\x26\x5F\x9F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
        "warning.mp3": b'\xFF\xFB\x90\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x58\x69\x6E\x67\x00\x00\x00\x0F\x00\x00\x00\x12\x00\x00\x0B\x32\x00\x09\x09\x09\x09\x09\x15\x15\x15\x15\x15\x15\x21\x21\x21\x21\x21\x21\x2D\x2D\x2D\x2D\x2D\x2D\x39\x39\x39\x39\x39\x39\x45\x45\x45\x45\x45\x45\x51\x51\x51\x51\x51\x51\x5D\x5D\x5D\x5D\x5D\x5D\x69\x69\x69\x69\x69\x69\x75\x75\x75\x75\x75\x75\x81\x81\x81\x81\x81\x81\x8D\x8D\x8D\x8D\x8D\x8D\x99\x99\x99\x99\x99\x99\xA5\xA5\xA5\xA5\xA5\xA5\xB1\xB1\xB1\xB1\xB1\xB1\xBD\xBD\xBD\xBD\xBD\xBD\xC5\xC5\xC5\xC5\xC5\xC5\xD1\xD1\xD1\xD1\xD1\xD1\xDD\xDD\xDD\xDD\xDD\xDD\xE8\xE8\xE8\xE8\xE8\xE8\xF6\xF6\xF6\xF6\xF6\xF6\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x39\x4C\x41\x4D\x45\x33\x2E\x31\x30\x30\x01\x96\x00\x00\x00\x00\x2E\x00\x00\x03\x50\x07\xCC\x57\x81\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
        "info.mp3": b'\xFF\xFB\x90\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x58\x69\x6E\x67\x00\x00\x00\x0F\x00\x00\x00\x12\x00\x00\x0C\x4E\x00\x09\x09\x09\x09\x09\x15\x15\x15\x15\x15\x15\x21\x21\x21\x21\x21\x21\x2D\x2D\x2D\x2D\x2D\x2D\x39\x39\x39\x39\x39\x39\x45\x45\x45\x45\x45\x45\x51\x51\x51\x51\x51\x51\x5D\x5D\x5D\x5D\x5D\x5D\x69\x69\x69\x69\x69\x69\x75\x75\x75\x75\x75\x75\x81\x81\x81\x81\x81\x81\x8D\x8D\x8D\x8D\x8D\x8D\x99\x99\x99\x99\x99\x99\xA5\xA5\xA5\xA5\xA5\xA5\xB1\xB1\xB1\xB1\xB1\xB1\xBD\xBD\xBD\xBD\xBD\xBD\xC5\xC5\xC5\xC5\xC5\xC5\xD1\xD1\xD1\xD1\xD1\xD1\xDD\xDD\xDD\xDD\xDD\xDD\xE8\xE8\xE8\xE8\xE8\xE8\xF6\xF6\xF6\xF6\xF6\xF6\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x39\x4C\x41\x4D\x45\x33\x2E\x31\x30\x30\x01\x96\x00\x00\x00\x00\x2E\x00\x00\x03\x50\x09\x2D\x7F\x71\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
    }
    
    # Создаем файлы
    created_files = []
    for filename, binary_data in sound_data.items():
        file_path = os.path.join(sounds_dir, filename)
        
        if not os.path.exists(file_path):
            try:
                # Записываем бинарные данные в файл
                with open(file_path, 'wb') as f:
                    f.write(binary_data)
                created_files.append(filename)
                print(f"✓ Создан звуковой файл: {filename}")
            except Exception as e:
                print(f"✗ Ошибка при создании файла {filename}: {e}")
        else:
            print(f"⚠ Файл {filename} уже существует")
    
    # Проверяем, что все файлы созданы
    if len(created_files) == len(sound_data):
        print("\n✓ Все звуковые файлы для уведомлений успешно созданы")
    elif created_files:
        print(f"\n✓ Созданы звуковые файлы: {', '.join(created_files)}")
    else:
        print("\n⚠ Все звуковые файлы уже существуют")


if __name__ == '__main__':
    create_notification_sounds()
    print("\nПожалуйста, перезапустите сервер Django, чтобы применить изменения.")